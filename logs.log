#0 building with "default" instance using docker driver

#1 [app internal] load build definition from Dockerfile
#1 transferring dockerfile: 1.30kB done
#1 DONE 0.0s

#2 [app internal] load metadata for docker.io/library/php:8.2-fpm
#2 DONE 0.0s

#3 [app auth] library/composer:pull token for registry-1.docker.io
#3 DONE 0.0s

#4 [app internal] load metadata for docker.io/library/composer:latest
#4 DONE 1.2s

#5 [app internal] load .dockerignore
#5 transferring context: 2B done
#5 DONE 0.0s

#6 [app stage-0  1/19] FROM docker.io/library/php:8.2-fpm
#6 DONE 0.0s

#7 [app] FROM docker.io/library/composer:latest@sha256:72b9e4b2038558f7256e7f925495aa791c0ee764e1d351f3963b379b18b4c2f5
#7 DONE 0.0s

#8 [app internal] load build context
#8 transferring context: 206B done
#8 DONE 0.1s

#9 [app stage-0 10/19] RUN apt-get clean && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [app stage-0 16/19] COPY ./html /var/www/html
#10 CACHED

#11 [app stage-0  5/19] RUN chown -R www-data:www-data /usr/local/etc/php-fpm.d/www.conf
#11 CACHED

#12 [app stage-0 12/19] WORKDIR /var/www/html
#12 CACHED

#13 [app stage-0  7/19] COPY ./nginx.conf /etc/nginx/conf.d/default.conf
#13 CACHED

#14 [app stage-0 13/19] RUN rm -rf /var/www/html
#14 CACHED

#15 [app stage-0 18/19] ADD init.sh /
#15 CACHED

#16 [app stage-0 11/19] COPY --from=composer /usr/bin/composer /usr/bin/composer
#16 CACHED

#17 [app stage-0 17/19] RUN chown -R www-data:www-data /var/www/html
#17 CACHED

#18 [app stage-0 14/19] RUN composer create-project laravel/laravel=^11.0 ./
#18 CACHED

#19 [app stage-0  9/19] COPY ./php.ini /usr/local/etc/php
#19 CACHED

#20 [app stage-0  3/19] RUN apt-get update && apt-get install -y nginx
#20 CACHED

#21 [app stage-0  2/19] RUN echo "UTC+3" > /etc/timezone
#21 CACHED

#22 [app stage-0 15/19] RUN composer install
#22 CACHED

#23 [app stage-0  8/19] RUN apt-get update && apt-get install -y     build-essential     libpng-dev     libonig-dev     libxml2-dev     zip     curl     unzip     git     libzip-dev     libfreetype6-dev     libjpeg62-turbo-dev     libpng-dev     libpq-dev     && docker-php-ext-configure pgsql -with-pgsql=/usr/local/pgsql     && docker-php-ext-install pdo pgsql pdo_pgsql pdo_mysql mbstring exif pcntl bcmath gd zip intl opcache
#23 CACHED

#24 [app stage-0  6/19] RUN chown -R www-data:www-data /var/run
#24 CACHED

#25 [app stage-0  4/19] COPY ./www.conf /usr/local/etc/php-fpm.d/www.conf
#25 CACHED

#26 [app stage-0 19/19] RUN chmod +x /init.sh
#26 CACHED

#27 [app] exporting to image
#27 exporting layers done
#27 writing image sha256:2cb9977bd0e9854e15e43e1ba7ee904e05277308274d271878e3e769d8c98049 done
#27 naming to docker.io/library/laravel8-app done
#27 DONE 0.0s

#28 [app] resolving provenance for metadata file
#28 DONE 0.0s
